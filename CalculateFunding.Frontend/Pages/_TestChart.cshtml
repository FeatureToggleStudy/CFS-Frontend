@using CalculateFunding.Frontend.ApiClient.Models.Results
@model CalculateFunding.Frontend.ApiClient.Models.Results.TestSummary
@{
    decimal RoundResult(decimal rate)
    {
        var stringResult = string.Format("{0:0.00}", rate);
        var decimalResult = Convert.ToDecimal(stringResult);
        var roundedResult = Math.Round(decimalResult, 0, MidpointRounding.AwayFromZero);
        return roundedResult;
    }
    var failed = RoundResult(Model.FailedRate);
    var passed = RoundResult(Model.PassedRate);
}
<div class="progress">
    <div class="progress-bar progress-bar-success" role="progressbar" style="width: @Model.PassedRate%">
        @passed%
    </div>
    <div class="progress-bar progress-bar-error" role="progressbar" style="width: @Model.FailedRate%">
        @if (failed != 0) 
        {
            <span>@failed%</span>
        }
    </div>
</div>