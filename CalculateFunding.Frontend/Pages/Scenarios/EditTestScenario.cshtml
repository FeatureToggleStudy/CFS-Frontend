@page "{testScenarioId}/{wasCreateSuccess?}"
@model CalculateFunding.Frontend.Pages.Scenarios.EditTestScenarioPageModel
@using CalculateFunding.Frontend.Properties

@{
    ViewData["Title"] = "Edit Test Scenario";
}

@section NavBar {
    <partial name="_NavbarPartial" />
}

@section PermissionWarnings
{
    <div id="permission-alert-edit-test-scenario" class="row" style="display:none;" data-bind="visible:!doesUserHavePermissionToSave()">
        <div class="col-xs-12 permission-warning-banner">
            <div class="permission-warning-inner">
                <p class="permission-warning-text"><i class="material-icons permission-warning-icon">warning</i>You are not permitted to make changes to this QA test</p>
            </div>
        </div>
    </div>
}

@section FormBannerLeft{
    <p class="hero-title">Edit quality assurance test</p>
}

@section BreadCrumb{
    <div class="breadcrumbs">
        <ol>
            <li><a href="/">@BreadcrumbText.CalculateFunding</a></li>
            <li><a href="~/scenarios">@BreadcrumbText.QualityAssurance</a></li>
            <li>Edit @Model.EditScenarioViewModel.Name</li>
        </ol>
    </div>
}

<div class="row" id="edit-test-scenario">

    <div class="col-xs-12 edit-scenario">
        <div class="edit-scenario alert alert--success" role="alert" id="SaveStatus" data-bind="visible: savedTestScenarioName(), attr:{'bannertext': BannerText}">
            <p class="alert__message">
                <span data-bind="text: savedTestScenarioName"></span> saved.
                <button type="button" class="close" data-dismiss="modal" data-bind="click: dismissSaveAlert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </p>
        </div>
        <form method="post" class="form" id="edit-test-scenario-form">
            <div class="validation-summary-errors" style="display:none;" data-valmsg-summary="true" data-bind="visible: isValidationSummaryVisible, attr:{'display': 'block'}">
                <h3 class="heading-large">There is a problem</h3>
                <p><strong>Check that you have answered the questions correctly</strong></p>
                <ul data-bind="foreach: validationLinks">
                    <li><a class="validation-summary-link" data-bind="attr: { 'href': href, 'id' : id }, text: message"></a></li>
                </ul>
            </div>
            <div class="row ">
                <div class="col-md-6">
                    <div class="edit-scenario heading-grey-container">
                        <div class="div-title">
                            <label asp-for="@Model.SpecificationName"> Specification</label>
                        </div>
                        <div>
                            <span asp-for="@Model.SpecificationName"> @Model.SpecificationName </span>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="row ">
                <div class="col-md-6">
                    <div data-bind="css: { 'validation-failed-block': !isNameValid() }">
                        <a validationanchor-for="@Model.EditScenarioViewModel.Name"></a>
                        <label asp-for="@Model.EditScenarioViewModel.Name">QA test name</label>
                        <h4 class="material-icons-content-container"><i class="material-icons material-icons-left">error</i> <span class="faded-text">Use a descriptive unique name other users can understand</span></h4>
                        <input data-bind="textInput: name, css:{ 'input-validation-error': !isNameValid() }" asp-for="@Model.EditScenarioViewModel.Name" class="form-control" type="text">
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6">
                    <div data-bind="css: { 'validation-failed-block': !isDescriptionValid() }">
                        <a validationanchor-for="@Model.EditScenarioViewModel.Description"></a>
                        <label asp-for="@Model.EditScenarioViewModel.Description">QA test description</label>
                        <textarea data-bind="textInput: description, css: { 'input-validation-error': !isDescriptionValid() }" asp-for="@Model.EditScenarioViewModel.Description" class="form-control" rows="3"></textarea>
                    </div>
                </div>
            </div>
            <br />
            <div id="edit-test-scenario">
                <div data-bind="visible: isIntellisenseLoading">Loading intellisense</div>
                <strong>QA test scenario</strong>
                <h4 class="material-icons-content-container"><i class="material-icons material-icons-left">error</i> <span class="faded-text">Start typing to see common functions, hints and tips</span></h4>
                <div id="monacoeditor" class="monaco-editor-container" data-bind="monacoEditor: sourceCode, monacoEditorOptions: { language: 'gherkin', theme : 'gherkin', autoIndent: true, editorCreatingCallback: function(){registerMonacoProviders($root)}, editorCreatedCallback: function(){configureMonacoEditor($root)}}"></div>

                <div class="spacing-30">
                    <input type="button" class="button-calculation" value="Validate QA Test" data-bind="click: compileTestScenario, disable: !canRunTest()" id="validate-qa-test-button" />
                </div>

                <strong>QA test validation output:</strong>
                <div class="build-output">
                    <div data-bind="if: (validationRequested() && !isCompilingTest() && hasGherkinEdited())">
                        <div data-bind="text: testOutput"></div>
                        Test validated successfully: <span data-bind="text: testBuilt"></span>
                        <div id="test-compiler-response">
                            <div class="compiler-messages" data-bind="foreach: validationResponse">
                                <div>
                                    <span data-bind="text: errorMessage"></span>:
                                    Line <span data-bind="text: line"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div data-bind="visible: isCompilingTest()">
                        <span>Validating</span>
                        <span data-bind="foreach: compilingSeconds">.</span>
                    </div>
                </div>

                <div class="spacing-30" data-bind="visible: (!testBuilt() && !isCompilingTest() && hasGherkinEdited() )">You must have a valid test before you can save it:</div>

                <div class="spacing-15">
                    <input type="button" class="button" value="Save QA test" id="save-test-button" data-bind="click: saveTestScenario , enable: canSaveTestScenario()" />
                </div>

                <div class="spacing-15" data-bind="visible: saveTestScenarioResult, text: saveTestScenarioResult"></div>

                <div>
                    <a href="~/scenarios" id="link-back">Back</a>
                </div>
            </div>
        </form>
    </div>

</div>

@section scripts{
    <script asp-src-include="~/assets/libs/js/knockout-latest.js" type="text/javascript" asp-append-version="true"></script>
    <script asp-src-include="~/assets/staticjs/regex.js" type="text/javascript" asp-append-version="true"></script>
    <script asp-src-include="~/assets/libs/js/monaco/vs/loader.js" type="text/javascript" asp-append-version="true"></script>
    <script asp-src-include="~/js/bindingHandler.monacoEditor.js" type="text/javascript" asp-append-version="true"></script>
    <script asp-src-include="~/js/provider.completion.gherkin.js" type="text/javascript" asp-append-version="true"></script>
    <script asp-src-include="~/js/edittestscenario.js" type="text/javascript" asp-append-version="true"></script>
    <script type="text/javascript">
        var editTestScenarioElement = document.getElementById("edit-test-scenario");
        var permissionAlertTestScenario = document.getElementById("permission-alert-edit-test-scenario");
        var vm = new calculateFunding.editTestScenario.EditTestScenarioViewModel({ "name": "@Html.Raw(Model.EditScenarioViewModel.Name)", "description": "@Html.Raw(Model.EditScenarioViewModel.Description)", "sourceCode": "@Html.Raw(Model.EditScenarioViewModel.Gherkin)", "specificationId": "@Html.Raw(Model.SpecificationId)", "scenarioId": "@Html.Raw(Model.TestScenarioId)" });
        vm.doesUserHavePermissionToSave(@Model.DoesUserHavePermissionToSave);
        if (editTestScenarioElement) {
            ko.applyBindings(vm, editTestScenarioElement);
        }
        ko.applyBindings(vm, permissionAlertTestScenario);
    </script>

}